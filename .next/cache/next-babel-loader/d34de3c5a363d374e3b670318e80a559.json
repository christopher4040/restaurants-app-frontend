{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Bootcamp/Restaurant-App/frontend/pages/restaurant/[restaurantID].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from \"@apollo/client\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Dishes from \"../../components/dishes\";\nimport { Container, Row } from \"reactstrap\";\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\nimport { InputGroup, InputGroupText, Input } from \"reactstrap\";\nimport AppContext from \"../../components/context\";\n\nfunction Restaurant() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var restaurantID = router.query.restaurantID;\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  console.log(\"URL: \".concat(API_URL));\n\n  var _useState = useState(\"\"),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var link = new HttpLink({\n    uri: \"\".concat(API_URL, \"/graphql\")\n  });\n  var cache = new InMemoryCache();\n  var client = new ApolloClient({\n    link: link,\n    cache: cache\n  });\n\n  var _useContext = useContext(AppContext),\n      restaurant = _useContext.restaurant,\n      setRestaurant = _useContext.setRestaurant;\n\n  var _useState2 = useState(\"\"),\n      name = _useState2[0],\n      setName = _useState2[1]; // useEffect(() => {\n  //   window.localStorage.setItem('RESTAURANT', JSON.stringify(restaurant));\n  // }, [restaurant])\n\n\n  useEffect(function () {\n    console.log(\":::::: Restaurant ::::::\");\n\n    if (restaurant.attributes) {\n      console.log(restaurant.attributes.name);\n      setName(restaurant.attributes.name);\n    } // const data = window.localStorage.getItem('RESTAURANT');\n    // console.log(\"Data ::::::::\" + data)\n    // if ( data !== null ) setRestaurant(JSON.parse(data));\n\n  }, [restaurant]);\n\n  var renderDishes = function renderDishes() {\n    return __jsx(Dishes, {\n      restaurantID: restaurantID,\n      search: query,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    style: {\n      display: \"flex\",\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    style: {\n      alignSelf: \"center\"\n    },\n    href: \"javascript:void(0)\",\n    onClick: function onClick() {\n      setRestaurant({}), router.push(\"/\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"ion-icon\", {\n    size: \"large\",\n    name: \"arrow-back-outline\",\n    style: {\n      color: \"rgba(0,0,0,.8)\",\n      fontSize: \"26px\",\n      marginRight: \"15px\",\n      marginTop: \"4px\",\n      paddingTop: \"3px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), __jsx(\"h3\", {\n    style: {\n      marginTop: \"10px\",\n      marginLeft: 0,\n      color: \"rgba(0,0,0,.8)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, name)), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), __jsx(Container, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"search my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Search for dishes\"), __jsx(InputGroup, {\n    className: \"mx-auto\",\n    style: {\n      maxWidth: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(InputGroupText, {\n    addontype: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \" Search \"), __jsx(Input, {\n    onChange: function onChange(e) {\n      return setQuery(e.target.value.toLocaleLowerCase());\n    },\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, renderDishes())));\n}\n\n_s(Restaurant, \"YelrzaUZWPABHY6Q4j5ejAeq8ic=\", false, function () {\n  return [useRouter];\n});\n\n_c = Restaurant;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["/Users/chris/Bootcamp/Restaurant-App/frontend/pages/restaurant/[restaurantID].js"],"names":["useQuery","useState","useContext","useEffect","useRouter","Dishes","Container","Row","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","InputGroup","InputGroupText","Input","AppContext","Restaurant","router","restaurantID","query","API_URL","process","env","NEXT_PUBLIC_API_URL","console","log","setQuery","link","uri","cache","client","restaurant","setRestaurant","name","setName","attributes","renderDishes","display","marginTop","alignSelf","push","color","fontSize","marginRight","paddingTop","marginLeft","maxWidth","e","target","value","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Dishes from \"../../components/dishes\";\nimport { Container, Row } from \"reactstrap\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport { InputGroup, InputGroupText, Input } from \"reactstrap\";\nimport AppContext from \"../../components/context\";\n\nfunction Restaurant() {\n  const router = useRouter();\n  const restaurantID = router.query.restaurantID;\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  console.log(`URL: ${API_URL}`);\n  const [query, setQuery] = useState(\"\");\n  const link = new HttpLink({ uri: `${API_URL}/graphql` });\n  const cache = new InMemoryCache();\n  const client = new ApolloClient({ link, cache });\n  const { restaurant, setRestaurant } = useContext(AppContext);\n  const [name, setName] = useState(\"\");\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('RESTAURANT', JSON.stringify(restaurant));\n  // }, [restaurant])\n  useEffect(() => {\n    console.log(\":::::: Restaurant ::::::\");\n    if (restaurant.attributes) {\n      console.log(restaurant.attributes.name);\n      setName(restaurant.attributes.name);\n    }\n\n    // const data = window.localStorage.getItem('RESTAURANT');\n    // console.log(\"Data ::::::::\" + data)\n    // if ( data !== null ) setRestaurant(JSON.parse(data));\n  }, [restaurant]);\n  const renderDishes = () => {\n    return <Dishes restaurantID={restaurantID} search={query}></Dishes>;\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      <Container style={{ display: \"flex\", marginTop: \"20px\" }}>\n        <a\n          style={{ alignSelf: \"center\" }}\n          href=\"javascript:void(0)\"\n          onClick={() => {\n            setRestaurant({}), router.push(\"/\");\n          }}\n        >\n          <ion-icon\n            size=\"large\"\n            name=\"arrow-back-outline\"\n            style={{\n              color: \"rgba(0,0,0,.8)\",\n              fontSize: \"26px\",\n              marginRight: \"15px\",\n              marginTop: \"4px\",\n              paddingTop: \"3px\",\n            }}\n          ></ion-icon>\n        </a>\n        <h3\n          style={{ marginTop: \"10px\", marginLeft: 0, color: \"rgba(0,0,0,.8)\" }}\n        >\n          {name}\n        </h3>\n      </Container>\n      <Container>\n        <h3></h3>\n      </Container>\n      <Container className=\"mt-5\">\n        <div className=\"search my-5\">\n          <h6 className=\"text-center\">Search for dishes</h6>\n          <InputGroup className=\"mx-auto\" style={{ maxWidth: \"600px\" }}>\n            <InputGroupText addontype=\"append\"> Search </InputGroupText>\n            <Input\n              onChange={(e) => setQuery(e.target.value.toLocaleLowerCase())}\n              value={query}\n            />\n          </InputGroup>\n        </div>\n        <Row xs=\"3\">{renderDishes()}</Row>\n      </Container>\n    </ApolloProvider>\n  );\n}\n\nexport default Restaurant;\n"]},"metadata":{},"sourceType":"module"}