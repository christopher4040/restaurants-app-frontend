{"ast":null,"code":"const stripe = require(\"stripe\")(\"sk_test_51LoFubCzea9b9xKEEL2qITPTbS4IB29Buf1T7S5FUZneml6dxVuSOda3cI1nmceDqEo8LLHTlfT7fR5D7IVP8QwI008VCfaAPn\");\n\nexport default async function handler(req, res) {\n  console.log(req.body);\n\n  if (req.method === \"POST\") {\n    try {\n      // Create Checkout Sessions from body params.\n      const charge = await stripe.charges.create({\n        amount: Math.floor(req.body.data.amount * 100),\n        currency: \"usd\",\n        source: \"tok_amex\",\n        description: `Order ${new Date()} by ${req.body.data.user}`\n      });\n      return res.status(200).json({\n        message: \"Success\",\n        charge\n      });\n    } catch (err) {\n      return res.status(err.statusCode || 500).json(err.message);\n    }\n  } else {\n    res.setHeader(\"Allow\", \"POST\");\n    res.status(405).end(\"Method Not Allowed\");\n  }\n}","map":{"version":3,"sources":["/Users/chris/Bootcamp/Restaurant-App/frontend/pages/api/chargeStripe.js"],"names":["stripe","require","handler","req","res","console","log","body","method","charge","charges","create","amount","Math","floor","data","currency","source","description","Date","user","status","json","message","err","statusCode","setHeader","end"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkB,6GAAlB,CAAf;;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;;AACA,MAAIJ,GAAG,CAACK,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACF;AACA,YAAMC,MAAM,GAAG,MAAMT,MAAM,CAACU,OAAP,CAAeC,MAAf,CAAsB;AACzCC,QAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWX,GAAG,CAACI,IAAJ,CAASQ,IAAT,CAAcH,MAAd,GAAuB,GAAlC,CADiC;AAEzCI,QAAAA,QAAQ,EAAE,KAF+B;AAGzCC,QAAAA,MAAM,EAAE,UAHiC;AAIzCC,QAAAA,WAAW,EAAG,SAAQ,IAAIC,IAAJ,EAAW,OAAMhB,GAAG,CAACI,IAAJ,CAASQ,IAAT,CAAcK,IAAK;AAJjB,OAAtB,CAArB;AAOA,aAAOhB,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,QAAAA,OAAO,EAAE,SADiB;AAE1Bd,QAAAA;AAF0B,OAArB,CAAP;AAID,KAbD,CAaE,OAAOe,GAAP,EAAY;AACZ,aAAOpB,GAAG,CAACiB,MAAJ,CAAWG,GAAG,CAACC,UAAJ,IAAkB,GAA7B,EAAkCH,IAAlC,CAAuCE,GAAG,CAACD,OAA3C,CAAP;AACD;AACF,GAjBD,MAiBO;AACLnB,IAAAA,GAAG,CAACsB,SAAJ,CAAc,OAAd,EAAuB,MAAvB;AACAtB,IAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBM,GAAhB,CAAoB,oBAApB;AACD;AACF","sourcesContent":["const stripe = require(\"stripe\")(\"sk_test_51LoFubCzea9b9xKEEL2qITPTbS4IB29Buf1T7S5FUZneml6dxVuSOda3cI1nmceDqEo8LLHTlfT7fR5D7IVP8QwI008VCfaAPn\");\n\nexport default async function handler(req, res) {\n  console.log(req.body);\n  if (req.method === \"POST\") {\n    try {\n      // Create Checkout Sessions from body params.\n      const charge = await stripe.charges.create({\n        amount: Math.floor(req.body.data.amount * 100),\n        currency: \"usd\",\n        source: \"tok_amex\",\n        description: `Order ${new Date()} by ${req.body.data.user}`,\n      });\n\n      return res.status(200).json({\n        message: \"Success\",\n        charge,\n      });\n    } catch (err) {\n      return res.status(err.statusCode || 500).json(err.message);\n    }\n  } else {\n    res.setHeader(\"Allow\", \"POST\");\n    res.status(405).end(\"Method Not Allowed\");\n  }\n}"]},"metadata":{},"sourceType":"module"}