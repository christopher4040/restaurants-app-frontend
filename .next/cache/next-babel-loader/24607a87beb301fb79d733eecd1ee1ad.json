{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Bootcamp/Restaurant-App/frontend/components/dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery, q } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container } from \"reactstrap\";\n\nfunction Dishes({\n  restaurantID,\n  search\n}) {\n  const GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      data {\n        id\n        attributes {\n          name\n          dishes {\n            data {\n              id\n              attributes {\n                name\n                description\n                price\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restaurantID\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  const {\n    addItem\n  } = useContext(AppContext);\n  const router = useRouter();\n  let dishes = data.restaurant.data.attributes.dishes;\n  console.log(search + ' :: ' + dishes);\n  let searchQuery = dishes.filter(res => {\n    return res.attributes.name.toLowerCase().includes(search);\n  }) || [];\n\n  if (searchQuery.length > 0) {\n    return __jsx(React.Fragment, null, searchQuery.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      style: {\n        padding: 0\n      },\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 10px\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, __jsx(Container, {\n      style: {\n        display: \"flex\",\n        paddingLeft: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 150,\n        width: 150\n      },\n      src: `http://localhost:1337${res.image.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), __jsx(CardTitle, {\n      style: {\n        margin: \"20px 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, __jsx(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 62\n      }\n    }, res.name), __jsx(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 81\n      }\n    }, \"Price: \", __jsx(\"a\", {\n      style: {\n        color: \"#0d6efd\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 92\n      }\n    }, \"$\", res.price)))), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer text-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      outline: true,\n      color: \"primary\",\n      onClick: () => addItem(res),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, \"+ Add To Cart\"))))));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }\n    }, \"No Dishes\");\n  }\n}\n\nexport default Dishes;","map":{"version":3,"sources":["/Users/chris/Bootcamp/Restaurant-App/frontend/components/dishes.js"],"names":["gql","useQuery","q","useRouter","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Dishes","restaurantID","search","GET_RESTAURANT_DISHES","loading","error","data","variables","id","addItem","router","dishes","restaurant","attributes","console","log","searchQuery","filter","res","name","toLowerCase","includes","length","map","padding","margin","height","display","paddingLeft","width","image","url","color","price","description"],"mappings":"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","sourcesContent":["import { gql, useQuery, q } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Col,\n  Container,\n} from \"reactstrap\";\n\n\nfunction Dishes({ restaurantID, search }) {\n  \n\n  const GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      data {\n        id\n        attributes {\n          name\n          dishes {\n            data {\n              id\n              attributes {\n                name\n                description\n                price\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restaurantID },\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n\n  const { addItem } = useContext(AppContext);\n\n  const router = useRouter();\n\n  let dishes = data.restaurant.data.attributes.dishes;\n  console.log(search + ' :: ' + dishes)\n  let searchQuery =\n    dishes.filter((res) => {\n      return res.attributes.name.toLowerCase().includes(search);\n    }) || [];\n\n  if (searchQuery.length > 0) {\n    return (\n      <>\n      \n          {searchQuery.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n              <Card style={{ margin: \"0 10px\", height: \"100%\" }}>\n                <Container style={{ display: \"flex\", paddingLeft: \"0px\"}}>\n                <CardImg\n                  top={true}\n                  style={{ height: 150, width: 150 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                  <CardTitle style={{ margin: \"20px 10px\" }}><h5>{res.name}</h5><h5>Price: <a style={{color: \"#0d6efd\"}}>${res.price}</a></h5></CardTitle>\n                </Container>\n                \n\n                <CardBody>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer text-end\">\n                  <Button outline color=\"primary\" onClick={() => addItem(res)}>\n                    + Add To Cart\n                  </Button>\n                </div>\n              </Card>\n            </Col>\n          ))}\n      </>\n    );\n  } else {\n    return <h1>No Dishes</h1>;\n  }\n}\nexport default Dishes;\n"]},"metadata":{},"sourceType":"module"}